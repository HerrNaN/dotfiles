#+TITLE: DoomEmacs config
#+AUTHOR: Karl Wikstrom

Some functionality uses this to identify you, e.g. GPG configuration, email
clients, file templates and snippets.
#+begin_src emacs-lisp
(setq user-full-name "Karl Wikstr√∂m"
      user-mail-address "karl@wikstrom.io")
#+end_src

Doom exposes five (optional) variables for controlling fonts in Doom. Here
are the three important ones:

+ `doom-font'
+ `doom-variable-pitch-font'
+ `doom-big-font' -- used for `doom-big-font-mode'; use this for
  presentations or streaming.

They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
font string. You generally only need these two:
(setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
      doom-variable-pitch-font (font-spec :family "sans" :size 13))

There are two ways to load a theme. Both assume the theme is installed and
available. You can either set `doom-theme' or manually load a theme with the
`load-theme' function. This is the default:

#+begin_src emacs-lisp
(setq doom-theme 'doom-one)
#+end_src

If you use `org' and don't want your org files in the default location below,
change `org-directory'. It must be set before org loads!
#+begin_src emacs-lisp
(setq org-directory "~/org/")
#+end_src

This determines the style of line numbers in effect. If set to `nil', line
numbers are disabled. For relative line numbers, set this to `relative'.
#+begin_src emacs-lisp
(setq display-line-numbers-type 't)
#+end_src

Start every frame maximized
#+begin_src emacs-lisp
(add-to-list 'initial-frame-alist '(fullscreen . fullboth))
#+end_src

Here are some additional functions/macros that could help you configure Doom:

- `load!' for loading external *.el files relative to this one
- `use-package!' for configuring packages
- `after!' for running code after a package has loaded
- `add-load-path!' for adding directories to the `load-path', relative to
  this file. Emacs searches the `load-path' when you load packages with
  `require' or `use-package'.
- `map!' for binding new keys

To get information about any of these functions/macros, move the cursor over
the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
This will open documentation for it, including demos of how they are used.

You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
they are implemented.

Custom Keybinds
#+begin_src emacs-lisp
(map! :leader
      :desc "Select treemacs window"
      :n "0"
      #'treemacs-select-window)

(map! :desc "Toggle line comment"
      :n "C-/"
      #'comment-line)
#+end_src

* Treemacs
#+begin_src emacs-lisp
(use-package! treemacs
  :init
  (setq treemacs-width 45
        +treemacs-git-mode 'extended)

  :config
  (treemacs-follow-mode t))
#+end_src
